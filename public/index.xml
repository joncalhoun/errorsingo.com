<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Errors in Go - Learn how to fix common errors in Go</title>
    <link>https://errorsingo.com/</link>
    <description>Recent content on Errors in Go - Learn how to fix common errors in Go</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 17 May 2018 20:14:22 -0400</lastBuildDate>
    
	<atom:link href="https://errorsingo.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>this-is-not-used</title>
      <link>https://errorsingo.com/context-context-deadline-exceeded/</link>
      <pubDate>Thu, 17 May 2018 20:14:22 -0400</pubDate>
      
      <guid>https://errorsingo.com/context-context-deadline-exceeded/</guid>
      <description>What causes the error? context deadline exceeded error occurs when using context.WithDeadline() and the deadline has expired.
package main import ( &amp;quot;context&amp;quot; &amp;quot;log&amp;quot; &amp;quot;time&amp;quot; ) func main() { var ctx context.Context var ctxCancelFunc context.CancelFunc var timeTillContextDeadline = time.Now().Add(3 * time.Second) ctx, ctxCancelFunc = context.WithDeadline(context.Background(), timeTillContextDeadline) defer ctxCancelFunc() time.Sleep(5 * time.Second) //Sleep simulates time your program was doing something //Check context for error, If ctx.Err() != nil gracefully exit the current execution if ctx.</description>
    </item>
    
    <item>
      <title>this-is-not-used</title>
      <link>https://errorsingo.com/compliation-no-new-variables-on-left-side-of/</link>
      <pubDate>Sun, 29 Apr 2018 13:39:40 -0400</pubDate>
      
      <guid>https://errorsingo.com/compliation-no-new-variables-on-left-side-of/</guid>
      <description>What causes the error? This error means that you are trying to use Go&amp;rsquo;s short form variable declaration (a := &amp;quot;some-value&amp;quot;) when the variable has already been declared.
The most common cause of this compilation error is when you have a variable declared via short form declaration and then add a new line of code before that line which adds a new declaration. This is much clearer with an example.</description>
    </item>
    
    <item>
      <title>this-is-not-used</title>
      <link>https://errorsingo.com/compilation-undefined-variable/</link>
      <pubDate>Sun, 29 Apr 2018 13:39:21 -0400</pubDate>
      
      <guid>https://errorsingo.com/compilation-undefined-variable/</guid>
      <description>What causes the error? This error is caused when a variable isn&amp;rsquo;t defined before attempting to assign it a value. This can commonly happen when you forget to use the short declaration form&amp;rsquo;s colon (:), or when you previously defined a variable and then later removed that declaration. For instance, imagine you had this code:
err := doStuff() if err != nil { // handle the err } err = doMoreStuff() if err !</description>
    </item>
    
    <item>
      <title>this-is-not-used</title>
      <link>https://errorsingo.com/html-template-pattern-matches-no-files/</link>
      <pubDate>Wed, 21 Feb 2018 08:41:31 -0500</pubDate>
      
      <guid>https://errorsingo.com/html-template-pattern-matches-no-files/</guid>
      <description>What causes the error? This issue is easily caused by some of the same issues that cause the os.ErrNotExist error. As a result, I suggest you start with the os.ErrNotExist article. Make sure you understand how Go reads opens files relative to where it is run (not relative to where your source code is), and then see if you can figure out the issue.
If that doesn&amp;rsquo;t work feel free to reach out - jon@calhoun.</description>
    </item>
    
    <item>
      <title>this-is-not-used</title>
      <link>https://errorsingo.com/compilation-invalid-identifier-u201c/</link>
      <pubDate>Fri, 09 Feb 2018 18:14:37 -0500</pubDate>
      
      <guid>https://errorsingo.com/compilation-invalid-identifier-u201c/</guid>
      <description>What causes the error? This error, and many other invalid identifier errors like it, stem from using an invalid character in your Go code. In this particular case, the issue stems from those weird curved quotation marks - “ and ” - which are different from the quotation marks you normally type. An example is shown below.
func main() { // this line cause a compilation error fmt.Println(“test”) }   Run it on the Go Playground → https://play.</description>
    </item>
    
    <item>
      <title>this-is-not-used</title>
      <link>https://errorsingo.com/compilation-invalid-identifier-u201d/</link>
      <pubDate>Fri, 09 Feb 2018 18:14:37 -0500</pubDate>
      
      <guid>https://errorsingo.com/compilation-invalid-identifier-u201d/</guid>
      <description>What causes the error? This error, and many other invalid identifier errors like it, stem from using an invalid character in your Go code. In this particular case, the issue stems from those weird curved quotation marks - “ and ” - which are different from the quotation marks you normally type. An example is shown below.
func main() { // this line cause a compilation error fmt.Println(“test”) }   Run it on the Go Playground → https://play.</description>
    </item>
    
    <item>
      <title>this-is-not-used</title>
      <link>https://errorsingo.com/github.com-lib-pq-err-ssl-not-supported/</link>
      <pubDate>Thu, 08 Feb 2018 23:58:22 -0500</pubDate>
      
      <guid>https://errorsingo.com/github.com-lib-pq-err-ssl-not-supported/</guid>
      <description>What causes the error? The pq.ErrSSLNotSupported error typically occurs in development when you try to connect to a database without specifying, or with an invalid setting for, the sslmode option in your connection string.
Let&amp;rsquo;s look at an example. Suppose you are using the lib/pq driver and you create your connection string.
connStr := &amp;quot;host=localhost port=5432 user=pquser dbname=some_db&amp;quot; db, err := sql.Open(&amp;quot;postgres&amp;quot;, connStr) if err != nil { // Your code errors here!</description>
    </item>
    
    <item>
      <title>this-is-not-used</title>
      <link>https://errorsingo.com/os-err-not-exist/</link>
      <pubDate>Thu, 08 Feb 2018 23:57:14 -0500</pubDate>
      
      <guid>https://errorsingo.com/os-err-not-exist/</guid>
      <description>What causes the error? If you are here, I&amp;rsquo;m going to assume that you already checked to see if the file exists. If not, go do that now. I&amp;rsquo;ll wait&amp;hellip;
Okay, files there? Great. The most common cause of this error (aside from a file not being present) stems from not understanding how a Go program looks for files. Unlike many languages you may have used in the past, Go opens files relative to where the binary is run from.</description>
    </item>
    
  </channel>
</rss>